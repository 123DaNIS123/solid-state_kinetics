name: Build exe with Poetry

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: main
          - os: windows-latest
            artifact_name: main.exe
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
  
      - name: Installing Poetry via pip
        run: |
          python -m pip install --user pipx
          pipx install poetry
          poetry install
            
      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        run: poetry run ./pyinstaller src/gui/__main__.py --collect-all scienceplots --onefile --name main
        
      - name: Build Win
        if: matrix.os == 'windows-latest'
        run: poetry run pyinstaller src/gui/__main__.py --collect-all scienceplots --onefile --name main

      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: main
          path: dist/${{ matrix.artifact_name }}
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          
      - name: Upload release asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./${{ matrix.artifact_name }}
          asset_name: ${{ matrix.artifact_name }}
          asset_content_type: application/zip
          
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
